import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { ComprehendMedicalServiceException as __BaseException } from "./ComprehendMedicalServiceException";
export declare const EntityType: {
  readonly ANATOMY: "ANATOMY";
  readonly BEHAVIORAL_ENVIRONMENTAL_SOCIAL: "BEHAVIORAL_ENVIRONMENTAL_SOCIAL";
  readonly MEDICAL_CONDITION: "MEDICAL_CONDITION";
  readonly MEDICATION: "MEDICATION";
  readonly PROTECTED_HEALTH_INFORMATION: "PROTECTED_HEALTH_INFORMATION";
  readonly TEST_TREATMENT_PROCEDURE: "TEST_TREATMENT_PROCEDURE";
  readonly TIME_EXPRESSION: "TIME_EXPRESSION";
};
export type EntityType = (typeof EntityType)[keyof typeof EntityType];
export declare const RelationshipType: {
  readonly ACUITY: "ACUITY";
  readonly ADMINISTERED_VIA: "ADMINISTERED_VIA";
  readonly AMOUNT: "AMOUNT";
  readonly DIRECTION: "DIRECTION";
  readonly DOSAGE: "DOSAGE";
  readonly DURATION: "DURATION";
  readonly EVERY: "EVERY";
  readonly FOR: "FOR";
  readonly FORM: "FORM";
  readonly FREQUENCY: "FREQUENCY";
  readonly NEGATIVE: "NEGATIVE";
  readonly OVERLAP: "OVERLAP";
  readonly QUALITY: "QUALITY";
  readonly RATE: "RATE";
  readonly ROUTE_OR_MODE: "ROUTE_OR_MODE";
  readonly STRENGTH: "STRENGTH";
  readonly SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE";
  readonly TEST_UNIT: "TEST_UNIT";
  readonly TEST_UNITS: "TEST_UNITS";
  readonly TEST_VALUE: "TEST_VALUE";
  readonly USAGE: "USAGE";
  readonly WITH_DOSAGE: "WITH_DOSAGE";
};
export type RelationshipType =
  (typeof RelationshipType)[keyof typeof RelationshipType];
export declare const AttributeName: {
  readonly DIAGNOSIS: "DIAGNOSIS";
  readonly FUTURE: "FUTURE";
  readonly HYPOTHETICAL: "HYPOTHETICAL";
  readonly LOW_CONFIDENCE: "LOW_CONFIDENCE";
  readonly NEGATION: "NEGATION";
  readonly PAST_HISTORY: "PAST_HISTORY";
  readonly PERTAINS_TO_FAMILY: "PERTAINS_TO_FAMILY";
  readonly SIGN: "SIGN";
  readonly SYMPTOM: "SYMPTOM";
};
export type AttributeName = (typeof AttributeName)[keyof typeof AttributeName];
export interface Trait {
  Name?: AttributeName | string;
  Score?: number;
}
export declare const EntitySubType: {
  readonly ACUITY: "ACUITY";
  readonly ADDRESS: "ADDRESS";
  readonly AGE: "AGE";
  readonly ALCOHOL_CONSUMPTION: "ALCOHOL_CONSUMPTION";
  readonly ALLERGIES: "ALLERGIES";
  readonly AMOUNT: "AMOUNT";
  readonly BRAND_NAME: "BRAND_NAME";
  readonly CONTACT_POINT: "CONTACT_POINT";
  readonly DATE: "DATE";
  readonly DIRECTION: "DIRECTION";
  readonly DOSAGE: "DOSAGE";
  readonly DURATION: "DURATION";
  readonly DX_NAME: "DX_NAME";
  readonly EMAIL: "EMAIL";
  readonly FORM: "FORM";
  readonly FREQUENCY: "FREQUENCY";
  readonly GENDER: "GENDER";
  readonly GENERIC_NAME: "GENERIC_NAME";
  readonly ID: "ID";
  readonly IDENTIFIER: "IDENTIFIER";
  readonly NAME: "NAME";
  readonly PHONE_OR_FAX: "PHONE_OR_FAX";
  readonly PROCEDURE_NAME: "PROCEDURE_NAME";
  readonly PROFESSION: "PROFESSION";
  readonly QUALITY: "QUALITY";
  readonly QUANTITY: "QUANTITY";
  readonly RACE_ETHNICITY: "RACE_ETHNICITY";
  readonly RATE: "RATE";
  readonly REC_DRUG_USE: "REC_DRUG_USE";
  readonly ROUTE_OR_MODE: "ROUTE_OR_MODE";
  readonly STRENGTH: "STRENGTH";
  readonly SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE";
  readonly TEST_NAME: "TEST_NAME";
  readonly TEST_UNIT: "TEST_UNIT";
  readonly TEST_UNITS: "TEST_UNITS";
  readonly TEST_VALUE: "TEST_VALUE";
  readonly TIME_EXPRESSION: "TIME_EXPRESSION";
  readonly TIME_TO_DX_NAME: "TIME_TO_DX_NAME";
  readonly TIME_TO_MEDICATION_NAME: "TIME_TO_MEDICATION_NAME";
  readonly TIME_TO_PROCEDURE_NAME: "TIME_TO_PROCEDURE_NAME";
  readonly TIME_TO_TEST_NAME: "TIME_TO_TEST_NAME";
  readonly TIME_TO_TREATMENT_NAME: "TIME_TO_TREATMENT_NAME";
  readonly TOBACCO_USE: "TOBACCO_USE";
  readonly TREATMENT_NAME: "TREATMENT_NAME";
  readonly URL: "URL";
};
export type EntitySubType = (typeof EntitySubType)[keyof typeof EntitySubType];
export interface Attribute {
  Type?: EntitySubType | string;
  Score?: number;
  RelationshipScore?: number;
  RelationshipType?: RelationshipType | string;
  Id?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Text?: string;
  Category?: EntityType | string;
  Traits?: Trait[];
}
export interface Characters {
  OriginalTextCharacters?: number;
}
export interface DescribeEntitiesDetectionV2JobRequest {
  JobId: string | undefined;
}
export interface InputDataConfig {
  S3Bucket: string | undefined;
  S3Key?: string;
}
export declare const JobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PARTIAL_SUCCESS: "PARTIAL_SUCCESS";
  readonly STOPPED: "STOPPED";
  readonly STOP_REQUESTED: "STOP_REQUESTED";
  readonly SUBMITTED: "SUBMITTED";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export declare const LanguageCode: {
  readonly EN: "en";
};
export type LanguageCode = (typeof LanguageCode)[keyof typeof LanguageCode];
export interface OutputDataConfig {
  S3Bucket: string | undefined;
  S3Key?: string;
}
export interface ComprehendMedicalAsyncJobProperties {
  JobId?: string;
  JobName?: string;
  JobStatus?: JobStatus | string;
  Message?: string;
  SubmitTime?: Date;
  EndTime?: Date;
  ExpirationTime?: Date;
  InputDataConfig?: InputDataConfig;
  OutputDataConfig?: OutputDataConfig;
  LanguageCode?: LanguageCode | string;
  DataAccessRoleArn?: string;
  ManifestFilePath?: string;
  KMSKey?: string;
  ModelVersion?: string;
}
export interface DescribeEntitiesDetectionV2JobResponse {
  ComprehendMedicalAsyncJobProperties?: ComprehendMedicalAsyncJobProperties;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface DescribeICD10CMInferenceJobRequest {
  JobId: string | undefined;
}
export interface DescribeICD10CMInferenceJobResponse {
  ComprehendMedicalAsyncJobProperties?: ComprehendMedicalAsyncJobProperties;
}
export interface DescribePHIDetectionJobRequest {
  JobId: string | undefined;
}
export interface DescribePHIDetectionJobResponse {
  ComprehendMedicalAsyncJobProperties?: ComprehendMedicalAsyncJobProperties;
}
export interface DescribeRxNormInferenceJobRequest {
  JobId: string | undefined;
}
export interface DescribeRxNormInferenceJobResponse {
  ComprehendMedicalAsyncJobProperties?: ComprehendMedicalAsyncJobProperties;
}
export interface DescribeSNOMEDCTInferenceJobRequest {
  JobId: string | undefined;
}
export interface DescribeSNOMEDCTInferenceJobResponse {
  ComprehendMedicalAsyncJobProperties?: ComprehendMedicalAsyncJobProperties;
}
export interface DetectEntitiesRequest {
  Text: string | undefined;
}
export interface Entity {
  Id?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Score?: number;
  Text?: string;
  Category?: EntityType | string;
  Type?: EntitySubType | string;
  Traits?: Trait[];
  Attributes?: Attribute[];
}
export interface UnmappedAttribute {
  Type?: EntityType | string;
  Attribute?: Attribute;
}
export interface DetectEntitiesResponse {
  Entities: Entity[] | undefined;
  UnmappedAttributes?: UnmappedAttribute[];
  PaginationToken?: string;
  ModelVersion: string | undefined;
}
export declare class InvalidEncodingException extends __BaseException {
  readonly name: "InvalidEncodingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidEncodingException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class TextSizeLimitExceededException extends __BaseException {
  readonly name: "TextSizeLimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TextSizeLimitExceededException, __BaseException>
  );
}
export interface DetectEntitiesV2Request {
  Text: string | undefined;
}
export interface DetectEntitiesV2Response {
  Entities: Entity[] | undefined;
  UnmappedAttributes?: UnmappedAttribute[];
  PaginationToken?: string;
  ModelVersion: string | undefined;
}
export interface DetectPHIRequest {
  Text: string | undefined;
}
export interface DetectPHIResponse {
  Entities: Entity[] | undefined;
  PaginationToken?: string;
  ModelVersion: string | undefined;
}
export interface InferICD10CMRequest {
  Text: string | undefined;
}
export declare const ICD10CMEntityType: {
  readonly DX_NAME: "DX_NAME";
  readonly TIME_EXPRESSION: "TIME_EXPRESSION";
};
export type ICD10CMEntityType =
  (typeof ICD10CMEntityType)[keyof typeof ICD10CMEntityType];
export declare const ICD10CMRelationshipType: {
  readonly OVERLAP: "OVERLAP";
  readonly QUALITY: "QUALITY";
  readonly SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE";
};
export type ICD10CMRelationshipType =
  (typeof ICD10CMRelationshipType)[keyof typeof ICD10CMRelationshipType];
export declare const ICD10CMTraitName: {
  readonly DIAGNOSIS: "DIAGNOSIS";
  readonly HYPOTHETICAL: "HYPOTHETICAL";
  readonly LOW_CONFIDENCE: "LOW_CONFIDENCE";
  readonly NEGATION: "NEGATION";
  readonly PERTAINS_TO_FAMILY: "PERTAINS_TO_FAMILY";
  readonly SIGN: "SIGN";
  readonly SYMPTOM: "SYMPTOM";
};
export type ICD10CMTraitName =
  (typeof ICD10CMTraitName)[keyof typeof ICD10CMTraitName];
export interface ICD10CMTrait {
  Name?: ICD10CMTraitName | string;
  Score?: number;
}
export declare const ICD10CMAttributeType: {
  readonly ACUITY: "ACUITY";
  readonly DIRECTION: "DIRECTION";
  readonly QUALITY: "QUALITY";
  readonly QUANTITY: "QUANTITY";
  readonly SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE";
  readonly TIME_EXPRESSION: "TIME_EXPRESSION";
  readonly TIME_TO_DX_NAME: "TIME_TO_DX_NAME";
};
export type ICD10CMAttributeType =
  (typeof ICD10CMAttributeType)[keyof typeof ICD10CMAttributeType];
export interface ICD10CMAttribute {
  Type?: ICD10CMAttributeType | string;
  Score?: number;
  RelationshipScore?: number;
  Id?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Text?: string;
  Traits?: ICD10CMTrait[];
  Category?: ICD10CMEntityType | string;
  RelationshipType?: ICD10CMRelationshipType | string;
}
export declare const ICD10CMEntityCategory: {
  readonly MEDICAL_CONDITION: "MEDICAL_CONDITION";
};
export type ICD10CMEntityCategory =
  (typeof ICD10CMEntityCategory)[keyof typeof ICD10CMEntityCategory];
export interface ICD10CMConcept {
  Description?: string;
  Code?: string;
  Score?: number;
}
export interface ICD10CMEntity {
  Id?: number;
  Text?: string;
  Category?: ICD10CMEntityCategory | string;
  Type?: ICD10CMEntityType | string;
  Score?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Attributes?: ICD10CMAttribute[];
  Traits?: ICD10CMTrait[];
  ICD10CMConcepts?: ICD10CMConcept[];
}
export interface InferICD10CMResponse {
  Entities: ICD10CMEntity[] | undefined;
  PaginationToken?: string;
  ModelVersion?: string;
}
export interface InferRxNormRequest {
  Text: string | undefined;
}
export declare const RxNormTraitName: {
  readonly NEGATION: "NEGATION";
  readonly PAST_HISTORY: "PAST_HISTORY";
};
export type RxNormTraitName =
  (typeof RxNormTraitName)[keyof typeof RxNormTraitName];
export interface RxNormTrait {
  Name?: RxNormTraitName | string;
  Score?: number;
}
export declare const RxNormAttributeType: {
  readonly DOSAGE: "DOSAGE";
  readonly DURATION: "DURATION";
  readonly FORM: "FORM";
  readonly FREQUENCY: "FREQUENCY";
  readonly RATE: "RATE";
  readonly ROUTE_OR_MODE: "ROUTE_OR_MODE";
  readonly STRENGTH: "STRENGTH";
};
export type RxNormAttributeType =
  (typeof RxNormAttributeType)[keyof typeof RxNormAttributeType];
export interface RxNormAttribute {
  Type?: RxNormAttributeType | string;
  Score?: number;
  RelationshipScore?: number;
  Id?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Text?: string;
  Traits?: RxNormTrait[];
}
export declare const RxNormEntityCategory: {
  readonly MEDICATION: "MEDICATION";
};
export type RxNormEntityCategory =
  (typeof RxNormEntityCategory)[keyof typeof RxNormEntityCategory];
export interface RxNormConcept {
  Description?: string;
  Code?: string;
  Score?: number;
}
export declare const RxNormEntityType: {
  readonly BRAND_NAME: "BRAND_NAME";
  readonly GENERIC_NAME: "GENERIC_NAME";
};
export type RxNormEntityType =
  (typeof RxNormEntityType)[keyof typeof RxNormEntityType];
export interface RxNormEntity {
  Id?: number;
  Text?: string;
  Category?: RxNormEntityCategory | string;
  Type?: RxNormEntityType | string;
  Score?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Attributes?: RxNormAttribute[];
  Traits?: RxNormTrait[];
  RxNormConcepts?: RxNormConcept[];
}
export interface InferRxNormResponse {
  Entities: RxNormEntity[] | undefined;
  PaginationToken?: string;
  ModelVersion?: string;
}
export interface InferSNOMEDCTRequest {
  Text: string | undefined;
}
export declare const SNOMEDCTEntityCategory: {
  readonly ANATOMY: "ANATOMY";
  readonly MEDICAL_CONDITION: "MEDICAL_CONDITION";
  readonly TEST_TREATMENT_PROCEDURE: "TEST_TREATMENT_PROCEDURE";
};
export type SNOMEDCTEntityCategory =
  (typeof SNOMEDCTEntityCategory)[keyof typeof SNOMEDCTEntityCategory];
export declare const SNOMEDCTRelationshipType: {
  readonly ACUITY: "ACUITY";
  readonly DIRECTION: "DIRECTION";
  readonly QUALITY: "QUALITY";
  readonly SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE";
  readonly TEST_UNIT: "TEST_UNIT";
  readonly TEST_UNITS: "TEST_UNITS";
  readonly TEST_VALUE: "TEST_VALUE";
};
export type SNOMEDCTRelationshipType =
  (typeof SNOMEDCTRelationshipType)[keyof typeof SNOMEDCTRelationshipType];
export interface SNOMEDCTConcept {
  Description?: string;
  Code?: string;
  Score?: number;
}
export declare const SNOMEDCTTraitName: {
  readonly DIAGNOSIS: "DIAGNOSIS";
  readonly FUTURE: "FUTURE";
  readonly HYPOTHETICAL: "HYPOTHETICAL";
  readonly LOW_CONFIDENCE: "LOW_CONFIDENCE";
  readonly NEGATION: "NEGATION";
  readonly PAST_HISTORY: "PAST_HISTORY";
  readonly PERTAINS_TO_FAMILY: "PERTAINS_TO_FAMILY";
  readonly SIGN: "SIGN";
  readonly SYMPTOM: "SYMPTOM";
};
export type SNOMEDCTTraitName =
  (typeof SNOMEDCTTraitName)[keyof typeof SNOMEDCTTraitName];
export interface SNOMEDCTTrait {
  Name?: SNOMEDCTTraitName | string;
  Score?: number;
}
export declare const SNOMEDCTAttributeType: {
  readonly ACUITY: "ACUITY";
  readonly DIRECTION: "DIRECTION";
  readonly QUALITY: "QUALITY";
  readonly SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE";
  readonly TEST_UNIT: "TEST_UNIT";
  readonly TEST_VALUE: "TEST_VALUE";
};
export type SNOMEDCTAttributeType =
  (typeof SNOMEDCTAttributeType)[keyof typeof SNOMEDCTAttributeType];
export interface SNOMEDCTAttribute {
  Category?: SNOMEDCTEntityCategory | string;
  Type?: SNOMEDCTAttributeType | string;
  Score?: number;
  RelationshipScore?: number;
  RelationshipType?: SNOMEDCTRelationshipType | string;
  Id?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Text?: string;
  Traits?: SNOMEDCTTrait[];
  SNOMEDCTConcepts?: SNOMEDCTConcept[];
}
export declare const SNOMEDCTEntityType: {
  readonly DX_NAME: "DX_NAME";
  readonly PROCEDURE_NAME: "PROCEDURE_NAME";
  readonly TEST_NAME: "TEST_NAME";
  readonly TREATMENT_NAME: "TREATMENT_NAME";
};
export type SNOMEDCTEntityType =
  (typeof SNOMEDCTEntityType)[keyof typeof SNOMEDCTEntityType];
export interface SNOMEDCTEntity {
  Id?: number;
  Text?: string;
  Category?: SNOMEDCTEntityCategory | string;
  Type?: SNOMEDCTEntityType | string;
  Score?: number;
  BeginOffset?: number;
  EndOffset?: number;
  Attributes?: SNOMEDCTAttribute[];
  Traits?: SNOMEDCTTrait[];
  SNOMEDCTConcepts?: SNOMEDCTConcept[];
}
export interface SNOMEDCTDetails {
  Edition?: string;
  Language?: string;
  VersionDate?: string;
}
export interface InferSNOMEDCTResponse {
  Entities: SNOMEDCTEntity[] | undefined;
  PaginationToken?: string;
  ModelVersion?: string;
  SNOMEDCTDetails?: SNOMEDCTDetails;
  Characters?: Characters;
}
export interface ComprehendMedicalAsyncJobFilter {
  JobName?: string;
  JobStatus?: JobStatus | string;
  SubmitTimeBefore?: Date;
  SubmitTimeAfter?: Date;
}
export interface ListEntitiesDetectionV2JobsRequest {
  Filter?: ComprehendMedicalAsyncJobFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListEntitiesDetectionV2JobsResponse {
  ComprehendMedicalAsyncJobPropertiesList?: ComprehendMedicalAsyncJobProperties[];
  NextToken?: string;
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface ListICD10CMInferenceJobsRequest {
  Filter?: ComprehendMedicalAsyncJobFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListICD10CMInferenceJobsResponse {
  ComprehendMedicalAsyncJobPropertiesList?: ComprehendMedicalAsyncJobProperties[];
  NextToken?: string;
}
export interface ListPHIDetectionJobsRequest {
  Filter?: ComprehendMedicalAsyncJobFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListPHIDetectionJobsResponse {
  ComprehendMedicalAsyncJobPropertiesList?: ComprehendMedicalAsyncJobProperties[];
  NextToken?: string;
}
export interface ListRxNormInferenceJobsRequest {
  Filter?: ComprehendMedicalAsyncJobFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListRxNormInferenceJobsResponse {
  ComprehendMedicalAsyncJobPropertiesList?: ComprehendMedicalAsyncJobProperties[];
  NextToken?: string;
}
export interface ListSNOMEDCTInferenceJobsRequest {
  Filter?: ComprehendMedicalAsyncJobFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListSNOMEDCTInferenceJobsResponse {
  ComprehendMedicalAsyncJobPropertiesList?: ComprehendMedicalAsyncJobProperties[];
  NextToken?: string;
}
export interface StartEntitiesDetectionV2JobRequest {
  InputDataConfig: InputDataConfig | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
  DataAccessRoleArn: string | undefined;
  JobName?: string;
  ClientRequestToken?: string;
  KMSKey?: string;
  LanguageCode: LanguageCode | string | undefined;
}
export interface StartEntitiesDetectionV2JobResponse {
  JobId?: string;
}
export interface StartICD10CMInferenceJobRequest {
  InputDataConfig: InputDataConfig | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
  DataAccessRoleArn: string | undefined;
  JobName?: string;
  ClientRequestToken?: string;
  KMSKey?: string;
  LanguageCode: LanguageCode | string | undefined;
}
export interface StartICD10CMInferenceJobResponse {
  JobId?: string;
}
export interface StartPHIDetectionJobRequest {
  InputDataConfig: InputDataConfig | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
  DataAccessRoleArn: string | undefined;
  JobName?: string;
  ClientRequestToken?: string;
  KMSKey?: string;
  LanguageCode: LanguageCode | string | undefined;
}
export interface StartPHIDetectionJobResponse {
  JobId?: string;
}
export interface StartRxNormInferenceJobRequest {
  InputDataConfig: InputDataConfig | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
  DataAccessRoleArn: string | undefined;
  JobName?: string;
  ClientRequestToken?: string;
  KMSKey?: string;
  LanguageCode: LanguageCode | string | undefined;
}
export interface StartRxNormInferenceJobResponse {
  JobId?: string;
}
export interface StartSNOMEDCTInferenceJobRequest {
  InputDataConfig: InputDataConfig | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
  DataAccessRoleArn: string | undefined;
  JobName?: string;
  ClientRequestToken?: string;
  KMSKey?: string;
  LanguageCode: LanguageCode | string | undefined;
}
export interface StartSNOMEDCTInferenceJobResponse {
  JobId?: string;
}
export interface StopEntitiesDetectionV2JobRequest {
  JobId: string | undefined;
}
export interface StopEntitiesDetectionV2JobResponse {
  JobId?: string;
}
export interface StopICD10CMInferenceJobRequest {
  JobId: string | undefined;
}
export interface StopICD10CMInferenceJobResponse {
  JobId?: string;
}
export interface StopPHIDetectionJobRequest {
  JobId: string | undefined;
}
export interface StopPHIDetectionJobResponse {
  JobId?: string;
}
export interface StopRxNormInferenceJobRequest {
  JobId: string | undefined;
}
export interface StopRxNormInferenceJobResponse {
  JobId?: string;
}
export interface StopSNOMEDCTInferenceJobRequest {
  JobId: string | undefined;
}
export interface StopSNOMEDCTInferenceJobResponse {
  JobId?: string;
}
